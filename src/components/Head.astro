---
import '../styles/style.scss';

const { title, description, url } = Astro.props;
---
<head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, minimal-ui">
    <meta http-equiv="content-language" content="en-us">
    <meta http-equiv="cleartype" content="on" />
    <meta name="robots" content="NOODP" />

    <title>{ title }</title>
    <meta name="description" content={ description }>
    <meta name="theme-color" content="#995AFF" />
    <link rel="canonical" href={ url } />
    <link rel="index" href="https://kyleconrad.com/">
    <link rel="author" href="/humans.txt" />

    <link rel="icon" id="fav96" type="image/png" sizes="96x96" href="/icons/favicon96-light.png">
    <link rel="icon" id="fav64" type="image/png" sizes="64x64" href="/icons/favicon64-light.png">
    <link rel="icon" id="fav48" type="image/png" sizes="48x48" href="/icons/favicon48-light.png">
    <link rel="icon" id="fav32" type="image/png" sizes="32x32" href="/icons/favicon32-light.png">

    <link rel="dns-prefetch" href="//images.ctfassets.net">
    <link rel="dns-prefetch" href="//videos.ctfassets.net">
    <link rel="preconnect" href="https://images.ctfassets.net">
    <link rel="preconnect" href="https://videos.ctfassets.net">
</head>

<script>
    const iconSizes = [ 96, 64, 48, 32 ];



    document.documentElement.style.setProperty( '--scrollbar', ( window.innerWidth - document.documentElement.clientWidth ) + 'px' );

    widowControl( window.innerWidth );

    if ( window.matchMedia && window.matchMedia( '(prefers-color-scheme: dark)' ).matches ) {
        swapIcons( iconSizes, 'dark' );
    }

    window.matchMedia( '(prefers-color-scheme: dark)' ).addEventListener( 'change', e => {
        const newColorScheme = e.matches ? 'dark' : 'light';

        swapIcons( iconSizes, newColorScheme );
    });

    window.addEventListener( 'resize', function() {
        document.documentElement.style.setProperty( '--scrollbar', ( window.innerWidth - document.documentElement.clientWidth ) + 'px' );

        widowControl( window.innerWidth );
    });



    function widowControl( width ) {
        let 	widowElements = document.querySelectorAll( 'p' );

        widowElements.forEach( function( element ) {
            element.innerHTML = element.innerHTML.replace( /&nbsp;/g, ' ' );
        });

        if ( width > 700 ) {
            widowElements.forEach( function( element ) {
                element.innerHTML = element.innerHTML.replace( /\s((?=(([^\s<>]|<[^>]*>)+))\2)\s*$/, '&nbsp;$1' );
            });
        }
    }

    function swapIcons( sizes, color ) {
        sizes.forEach( ( size ) => {
            const link = document.querySelector<HTMLLinkElement>( '#fav' + size );

            link.href = '/icons/favicon' + size + '-' + color + '.png';
        });
    }
</script>