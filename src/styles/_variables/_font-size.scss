@use "sass:math";



// FONT-SIZE RESPONSIVE FUNCTIONS
@function font-size-math($base, $size, $unit) {
	@return (math.div($size, $base) * $unit);
}
@function font-vw-math($size) {
	@return (math.div($size, 1440) * 100vw);
}
@function font-vwraw-math($size) {
	@return (math.div($size, 1440) * 100);
}
@function line-height-math($size, $line-height) {
	@return math.div($line-height, $size);
}
@function letter-spacing-math($size, $letter-spacing) {
	@return (math.div($letter-spacing, $size) * 1em);
}


@mixin fontmath($unit, $size, $line-height, $letter-spacing) {
	font-size: font-size-math($base-value, $size, $unit);
	line-height: line-height-math($size, $line-height);
	letter-spacing: letter-spacing-math($size, $letter-spacing);
}

@mixin fontvwmath($min, $size, $max, $line-height, $letter-spacing) {
	font-size: clamp(( $min * 1px ), font-vw-math($size), ( $max * 1px ));
	line-height: line-height-math($size, $line-height);
	letter-spacing: letter-spacing-math($size, $letter-spacing);	
}

@mixin fontvwadjust($min, $size, $max, $line-height, $letter-spacing) {
	$emMin: font-size-math(16, $min, 1em);
	$emMax: font-size-math(16, $max, 1em);

	font-size: clamp($emMin, calc( font-vwraw-math($size) * var( --fontvw ) ), $emMax);
	line-height: line-height-math($size, $line-height);
	letter-spacing: letter-spacing-math($size, $letter-spacing);	
}

/*
EXAMPLE USAGE:
h1 {
	@include fontmath(1em, 36, 42, 4.5);
}

Ensure that the base unit has a 1 in front of it - whether it be 1em or 1rem, it's required to do the math. Do not use units for the other numbers (it assumes those are pixel values and converts them to the proper formats for responsive text).

h1 {
	@include fontvwmath(20, 36, 48, 42, 4.5);
}

h1 {
	@include fontvwadjust(20, 36, 48, 42, 4.5);
}

Do not use units for any numbers (it converts them to the proper formats for responsive text).
*/